# #Todoist API
#
## Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app_console).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime.
#
# The version of the OpenAPI document: 1
#
# Generated by: https://openapi-generator.tech
# Generator version: 7.14.0-SNAPSHOT
#

require "spec_helper"
require "json"

# Unit tests for Todoist::TasksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "TasksApi" do
  before do
    # run before each test
    @api_instance = Todoist::TasksApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of TasksApi" do
    it "should create an instance of TasksApi" do
      expect(@api_instance).to be_instance_of(Todoist::TasksApi)
    end
  end

  # unit tests for close_task_api_v1_tasks_task_id_close_post
  # Close Task
  # Closes a task.  The command performs in the same way as our official clients:  Regular tasks are marked complete and moved to history, along with their subtasks. Tasks with [recurring due dates](https://todoist.com/help/articles/introduction-to-recurring-dates-YUYVJJAV) will be scheduled to their next occurrence.
  # @param task_id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe "close_task_api_v1_tasks_task_id_close_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_task_api_v1_tasks_post
  # Create Task
  # @param todoist_apps_api_rest_tasks_body1
  # @param [Hash] opts the optional parameters
  # @return [ItemSyncView]
  describe "create_task_api_v1_tasks_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_task_api_v1_tasks_task_id_delete
  # Delete Task
  # @param task_id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe "delete_task_api_v1_tasks_task_id_delete test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_task_api_v1_tasks_task_id_get
  # Get Task
  # Returns a single active (non-completed) task by ID
  # @param task_id
  # @param [Hash] opts the optional parameters
  # @return [ItemSyncView]
  describe "get_task_api_v1_tasks_task_id_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tasks_api_v1_tasks_get
  # Get Tasks
  # Returns a paginated list containing all active tasks
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectId2] :project_id
  # @option opts [SectionId] :section_id
  # @option opts [ParentId] :parent_id
  # @option opts [String] :label
  # @option opts [String] :ids
  # @option opts [String] :cursor
  # @option opts [Integer] :limit
  # @return [PaginatedListItemSyncView]
  describe "get_tasks_api_v1_tasks_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tasks_by_filter_api_v1_tasks_filter_get
  # Get Tasks By Filter
  # @param query
  # @param [Hash] opts the optional parameters
  # @option opts [String] :lang
  # @option opts [String] :cursor
  # @option opts [Integer] :limit
  # @return [PaginatedListItemSyncView]
  describe "get_tasks_by_filter_api_v1_tasks_filter_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for move_task_api_v1_tasks_task_id_move_post
  # Move Task
  # Moves task to another project, section or parent.
  # @param task_id
  # @param todoist_apps_api_rest_tasks_body2
  # @param [Hash] opts the optional parameters
  # @return [ItemSyncView]
  describe "move_task_api_v1_tasks_task_id_move_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for quick_add_api_v1_tasks_quick_post
  # Quick Add
  # Add a new task using the Quick Add implementation similar to that used in the official clients
  # @param todoist_apps_api_sync_rest_quick_body
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe "quick_add_api_v1_tasks_quick_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reopen_task_api_v1_tasks_task_id_reopen_post
  # Reopen Task
  # Reopens a task.  Any ancestor tasks or sections will also be marked as uncomplete and restored from history.  The reinstated tasks and sections will appear at the end of the list within their parent, after any previously active tasks.
  # @param task_id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe "reopen_task_api_v1_tasks_task_id_reopen_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tasks_completed_by_completion_date_api_v1_tasks_completed_by_completion_date_get
  # Tasks Completed By Completion Date
  # Retrieves a list of completed tasks strictly limited by the specified completion date range (up to 3 months).  It can retrieve completed items:  - From all the projects the user has joined in a workspace - From all the projects of the user - That match many [supported   filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)  By default, the response is limited to a page containing a maximum of 50 items (configurable using &#x60;limit&#x60;).  Subsequent pages of results can be fetched by using the &#x60;next_cursor&#x60; value from the response as the &#x60;cursor&#x60; value for the next request.
  # @param since
  # @param _until
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :workspace_id
  # @option opts [ProjectId2] :project_id
  # @option opts [SectionId1] :section_id
  # @option opts [ParentId] :parent_id
  # @option opts [String] :filter_query
  # @option opts [String] :filter_lang
  # @option opts [String] :cursor
  # @option opts [Integer] :limit
  # @return [TasksCompletedDateResponse]
  describe "tasks_completed_by_completion_date_api_v1_tasks_completed_by_completion_date_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tasks_completed_by_due_date_api_v1_tasks_completed_by_due_date_get
  # Tasks Completed By Due Date
  # Retrieves a list of completed items strictly limited by the specified due date range (up to 6 weeks).  It can retrieve completed items:  - From within a project, section, or parent item - From all the projects the user has joined in a workspace - From all the projects of the user - That match many [supported   filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)  By default, the response is limited to a page containing a maximum of 50 items (configurable using &#x60;limit&#x60;).  Subsequent pages of results can be fetched by using the &#x60;next_cursor&#x60; value from the response as the &#x60;cursor&#x60; value for the next request.
  # @param since
  # @param _until
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :workspace_id
  # @option opts [ProjectId2] :project_id
  # @option opts [SectionId1] :section_id
  # @option opts [ParentId] :parent_id
  # @option opts [String] :filter_query
  # @option opts [String] :filter_lang
  # @option opts [String] :cursor
  # @option opts [Integer] :limit
  # @return [TasksCompletedDateResponse]
  describe "tasks_completed_by_due_date_api_v1_tasks_completed_by_due_date_get test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_task_api_v1_tasks_task_id_post
  # Update Task
  # @param task_id
  # @param todoist_apps_api_rest_tasks_body3
  # @param [Hash] opts the optional parameters
  # @return [ItemSyncView]
  describe "update_task_api_v1_tasks_task_id_post test" do
    it "should work" do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end
end
