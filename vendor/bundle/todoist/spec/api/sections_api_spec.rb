=begin
#Todoist API

## Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app_console).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
Generator version: 7.14.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Todoist::SectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SectionsApi' do
  before do
    # run before each test
    @api_instance = Todoist::SectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SectionsApi' do
    it 'should create an instance of SectionsApi' do
      expect(@api_instance).to be_instance_of(Todoist::SectionsApi)
    end
  end

  # unit tests for create_section_api_v1_sections_post
  # Create Section
  # Create a new section
  # @param todoist_apps_api_rest_sections_body1 
  # @param [Hash] opts the optional parameters
  # @return [SectionSyncView]
  describe 'create_section_api_v1_sections_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_section_api_v1_sections_section_id_delete
  # Delete Section
  # Delete the section and all of its tasks
  # @param section_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_section_api_v1_sections_section_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_section_api_v1_sections_section_id_get
  # Get Section
  # Return the section for the given section ID
  # @param section_id 
  # @param [Hash] opts the optional parameters
  # @return [SectionSyncView]
  describe 'get_section_api_v1_sections_section_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sections_api_v1_sections_get
  # Get Sections
  # Return a list of all active sections for the user
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectId] :project_id 
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [PaginatedListSectionSyncView]
  describe 'get_sections_api_v1_sections_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_section_api_v1_sections_section_id_post
  # Update Section
  # @param section_id 
  # @param todoist_apps_api_rest_sections_body2 
  # @param [Hash] opts the optional parameters
  # @return [SectionSyncView]
  describe 'update_section_api_v1_sections_section_id_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
