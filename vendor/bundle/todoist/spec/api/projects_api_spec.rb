=begin
#Todoist API

## Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app_console).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
Generator version: 7.14.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Todoist::ProjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectsApi' do
  before do
    # run before each test
    @api_instance = Todoist::ProjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectsApi' do
    it 'should create an instance of ProjectsApi' do
      expect(@api_instance).to be_instance_of(Todoist::ProjectsApi)
    end
  end

  # unit tests for archive_project_api_v1_projects_project_id_archive_post
  # Archive Project
  # Marks a project as archived. For personal projects, this will archive it just for the initiating user (leaving it visible to any other collaborators). For workspace projects, this will archive it for all workspace users, removing it from view.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseArchiveProjectApiV1ProjectsProjectIdArchivePost]
  describe 'archive_project_api_v1_projects_project_id_archive_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_project_api_v1_projects_post
  # Create Project
  # Creates a new project and returns it
  # @param todoist_apps_api_rest_projects_body1 
  # @param [Hash] opts the optional parameters
  # @return [ResponseCreateProjectApiV1ProjectsPost]
  describe 'create_project_api_v1_projects_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_project_api_v1_projects_project_id_delete
  # Delete Project
  # Deletes a project and all of its sections and tasks.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_project_api_v1_projects_project_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_archived_api_v1_projects_archived_get
  # Get Archived
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [PaginatedListAnnotatedProjectV1ViewFieldInfoAnnotationNoneTypeRequiredTrueExamplesIdNameChildOrderParentIdColorCollapsedIsArchivedIsDeletedViewStyle]
  describe 'get_archived_api_v1_projects_archived_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_api_v1_projects_project_id_get
  # Get Project
  # Returns a project object related to the given ID
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseGetProjectApiV1ProjectsProjectIdGet]
  describe 'get_project_api_v1_projects_project_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_collaborators_api_v1_projects_project_id_collaborators_get
  # Get Project Collaborators
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [PaginatedListCollaborator]
  describe 'get_project_collaborators_api_v1_projects_project_id_collaborators_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_projects_api_v1_projects_get
  # Get Projects
  # Returns a list containing all active user projects
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [PaginatedListAnnotatedUnionPersonalProjectSyncViewWorkspaceProjectSyncViewFieldInfoAnnotationNoneTypeRequiredTrueTitleProjectObject]
  describe 'get_projects_api_v1_projects_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for join_api_v1_projects_project_id_join_post
  # Join
  # _Only used for workspaces_  This endpoint is used to join a workspace project by a workspace_user and is only usable by the workspace user.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [GetDataV2Response]
  describe 'join_api_v1_projects_project_id_join_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unarchive_project_api_v1_projects_project_id_unarchive_post
  # Unarchive Project
  # Marks a previously archived project as active again. For personal projects, this will make the project visible again for the initiating user. For workspace projects, this will make the project visible again for all applicable workspace users.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseUnarchiveProjectApiV1ProjectsProjectIdUnarchivePost]
  describe 'unarchive_project_api_v1_projects_project_id_unarchive_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_project_api_v1_projects_project_id_post
  # Update Project
  # Updated a project and return it
  # @param project_id 
  # @param todoist_apps_api_rest_projects_body2 
  # @param [Hash] opts the optional parameters
  # @return [ResponseUpdateProjectApiV1ProjectsProjectIdPost]
  describe 'update_project_api_v1_projects_project_id_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
