=begin
#Todoist API

## Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app_console).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
Generator version: 7.14.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Todoist::WorkspaceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WorkspaceApi' do
  before do
    # run before each test
    @api_instance = Todoist::WorkspaceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WorkspaceApi' do
    it 'should create an instance of WorkspaceApi' do
      expect(@api_instance).to be_instance_of(Todoist::WorkspaceApi)
    end
  end

  # unit tests for accept_invitation_api_v1_workspaces_invitations_invite_code_accept_put
  # Accept Invitation
  # Accept a workspace invitation. Usable by authenticated users only.
  # @param invite_code 
  # @param [Hash] opts the optional parameters
  # @return [WorkspaceInvitationView]
  describe 'accept_invitation_api_v1_workspaces_invitations_invite_code_accept_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for active_projects_api_v1_workspaces_workspace_id_projects_active_get
  # Active Projects
  # Returns all active workspace projects, including those visible but not joined by the user.  _For guests, returns all joined workspace projects only._
  # @param workspace_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [ProjectsResponse]
  describe 'active_projects_api_v1_workspaces_workspace_id_projects_active_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for all_invitations_api_v1_workspaces_invitations_all_get
  # All Invitations
  # Return a list containing details of all pending invitation to a workspace.  This list is not paginated. All workspace members can access this list.
  # @param workspace_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<WorkspaceInvitationView>]
  describe 'all_invitations_api_v1_workspaces_invitations_all_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for archived_projects_api_v1_workspaces_workspace_id_projects_archived_get
  # Archived Projects
  # @param workspace_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [ProjectsResponse]
  describe 'archived_projects_api_v1_workspaces_workspace_id_projects_archived_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_invitation_api_v1_workspaces_invitations_delete_post
  # Delete Invitation
  # Deletes a workspace invitation. Only admins can delete invitations.
  # @param todoist_apps_api_sync_rest_workspaces_body1 
  # @param [Hash] opts the optional parameters
  # @return [WorkspaceInvitationView]
  describe 'delete_invitation_api_v1_workspaces_invitations_delete_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_workspaces_users_api_v1_workspaces_users_get
  # Get Workspaces Users
  # Returns all workspace_users for a given workspace if workspace_id is provided. Otherwise, returns all workspace_users for all workspaces that the requesting user is part of.  _Not accessible by guests._
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :workspace_id 
  # @option opts [String] :cursor 
  # @option opts [Integer] :limit 
  # @return [UsersResponse]
  describe 'get_workspaces_users_api_v1_workspaces_users_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invitations_api_v1_workspaces_invitations_get
  # Invitations
  # Return a list of user emails who have a pending invitation to a workspace.  The list is not paginated. All workspace members can access this list.
  # @param workspace_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'invitations_api_v1_workspaces_invitations_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for join_api_v1_workspaces_join_post
  # Join
  # Join a workspace via link or via workspace ID, if the user can auto-join the workspace by domain.  ## Joining by Domain This is possible if: - The user is verified - The user has a user e-mail belonging to a domain that is set   as a domain name for a workspace - That workspace has the auto-join by domain feature enabled
  # @param todoist_apps_api_sync_rest_workspaces_body2 
  # @param [Hash] opts the optional parameters
  # @return [WorkspaceUserView]
  describe 'join_api_v1_workspaces_join_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for plan_details_api_v1_workspaces_plan_details_get
  # Plan Details
  # Lists details of the workspace&#39;s current plan and usage
  # @param workspace_id 
  # @param [Hash] opts the optional parameters
  # @return [PlanDetailsResponse]
  describe 'plan_details_api_v1_workspaces_plan_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reject_invitation_api_v1_workspaces_invitations_invite_code_reject_put
  # Reject Invitation
  # Reject a workspace invitation. Usable by authenticated users only.
  # @param invite_code 
  # @param [Hash] opts the optional parameters
  # @return [WorkspaceInvitationView]
  describe 'reject_invitation_api_v1_workspaces_invitations_invite_code_reject_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_logo_api_v1_workspaces_logo_post
  # Update Logo
  # Upload an image to be used as the workspace logo. Similar to a userâ€™s avatar. If &#x60;delete&#x60; is set to true, it removes the logo completely and does not return any &#x60;logo_*&#x60; attribute.
  # @param todoist_apps_api_sync_rest_workspaces_body3 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'update_logo_api_v1_workspaces_logo_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
